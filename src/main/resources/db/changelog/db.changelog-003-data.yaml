databaseChangeLog:
  - changeSet:
      id: insert-roles-data
      author: neekostar
      changes:
        - insert:
            tableName: roles
            columns:
              - column:
                  name: id
                  value: '11111111-1111-1111-1111-111111111111'
              - column:
                  name: name
                  value: "USER"
        - insert:
            tableName: roles
            columns:
              - column:
                  name: id
                  value: '22222222-2222-2222-2222-222222222222'
              - column:
                  name: name
                  value: "ADMIN"

  - changeSet:
      id: insert-users-data
      author: neekostar
      changes:
        - sql:
            sql: >
              CREATE OR REPLACE FUNCTION insert_users()
              RETURNS void AS $$
              DECLARE
                i integer;
              BEGIN
                FOR i IN 1..15 LOOP
                  INSERT INTO users 
                    (id, username, email, password, first_name, last_name, rating, role_id, avatar_url, created_at, updated_at)
                  VALUES (
                    ('00000000-0000-0000-0000-' || lpad(i::text, 12, '0'))::uuid,
                    'user' || i,
                    'user' || i || '@example.com',
                    '$2a$10$kmZ7vSkO7nITTnomjD90dumxtBuoDaTyg/mLEPzmiGFmym21XvQcy',
                    'First' || i,
                    'Last' || i,
                    0,
                    '11111111-1111-1111-1111-111111111111',
                    'http://example.com/avatar' || i || '.jpg',
                    '2025-01-10T00:00:00'::timestamp,
                    '2025-01-10T00:00:00'::timestamp
                  );
                END LOOP;
              END;
              $$ LANGUAGE plpgsql;

              SELECT insert_users();

              DROP FUNCTION insert_users();
            splitStatements: false
            endDelimiter: //

  - changeSet:
      id: insert-ads-data
      author: neekostar
      changes:
        - insert:
            tableName: ads
            columns:
              - column:
                  name: id
                  value: 'aaaaaaaa-0000-0000-0000-000000000001'
              - column:
                  name: category
                  value: "ELECTRONICS"
              - column:
                  name: city
                  value: "City1"
              - column:
                  name: created_at
                  valueDate: "2023-01-02T00:00:00"
              - column:
                  name: description
                  value: "Description for ad 1"
              - column:
                  name: is_promoted
                  valueBoolean: false
              - column:
                  name: price
                  valueNumeric: 100.00
              - column:
                  name: promotion_end_date
                  valueDate: "2025-01-10T00:00:00"
              - column:
                  name: title
                  value: "Ad Title 1"
              - column:
                  name: updated_at
                  valueDate: "2025-01-02T00:00:00"
              - column:
                  name: user_id
                  value: '00000000-0000-0000-0000-000000000001'
              - column:
                  name: status
                  value: "ACTIVE"
              - column:
                  name: image_url
                  value: "http://example.com/ad1.jpg"

        - sql:
            sql: >
              CREATE OR REPLACE FUNCTION insert_ads()
              RETURNS void AS $$
              DECLARE
                i integer;
                uid uuid;
              BEGIN
                FOR i IN 2..100 LOOP
                  uid := (
                    SELECT id FROM users
                    WHERE username = 'user' || (CASE WHEN (i % 15) = 0 THEN 15 ELSE (i % 15) END)
                    LIMIT 1
                  );
                  INSERT INTO ads (id, category, city, description, is_promoted, price, promotion_end_date, title, user_id, status, image_url, created_at, updated_at)
                  VALUES (
                    ('aaaaaaaa-0000-0000-0000-' || lpad(i::text, 12, '0'))::uuid,
                    (ARRAY['ELECTRONICS','FURNITURE','CLOTHING','BOOKS','SPORTS','TOYS','VEHICLES','SERVICES','JOBS','REAL_ESTATE','OTHER'])[(random()*10+1)::int],
                    'City' || i,
                    'Description for ad ' || i,
                    false,
                    100 + i,
                    NULL,
                    'Ad Title ' || i,
                    uid,
                    'ACTIVE',
                    'http://example.com/ad' || i || '.jpg',
                    '2025-01-10T00:00:00'::timestamp,
                    '2025-01-10T00:00:00'::timestamp  
                  );
                END LOOP;
              END;
              $$ LANGUAGE plpgsql;

              SELECT insert_ads();

              DROP FUNCTION insert_ads();
            splitStatements: false
            endDelimiter: //

  - changeSet:
      id: insert-comments-data
      author: neekostar
      changes:
        - sql:
            sql: >
              CREATE OR REPLACE FUNCTION insert_comments()
              RETURNS void AS $$
              DECLARE
                i integer;
                ad_id uuid;
                user_id uuid;
              BEGIN
                FOR i IN 1..100 LOOP
                  -- Выбираем случайное объявление и пользователя
                  SELECT id INTO ad_id FROM ads ORDER BY random() LIMIT 1;
                  SELECT id INTO user_id FROM users ORDER BY random() LIMIT 1;

                  -- Вставляем комментарий
                  INSERT INTO comments (id, comment_text, created_at, ad_id, user_id)
                  VALUES (
                    gen_random_uuid(),
                    'Comment ' || i,
                    now(),
                    ad_id,
                    user_id
                  );
                END LOOP;
              END;
              $$ LANGUAGE plpgsql;

              SELECT insert_comments();

              DROP FUNCTION insert_comments();
            splitStatements: false
            endDelimiter: //

  - changeSet:
      id: insert-messages-data
      author: neekostar
      changes:
        - sql:
            sql: >
              CREATE OR REPLACE FUNCTION insert_messages()
              RETURNS void AS $$
              DECLARE
                i integer;
                sender_id uuid;
                receiver_id uuid;
              BEGIN
                FOR i IN 1..100 LOOP
                  -- Выбираем случайного отправителя
                  SELECT id INTO sender_id FROM users ORDER BY random() LIMIT 1;

                  -- Выбираем случайного получателя, отличного от отправителя
                  LOOP
                    SELECT id INTO receiver_id FROM users ORDER BY random() LIMIT 1;
                    EXIT WHEN sender_id != receiver_id;
                  END LOOP;

                  -- Вставляем сообщение
                  INSERT INTO messages (id, created_at, message_text, receiver_id, sender_id)
                  VALUES (
                    gen_random_uuid(),
                    now(),
                    'Message ' || i,
                    receiver_id,
                    sender_id
                  );
                END LOOP;
              END;
              $$ LANGUAGE plpgsql;

              SELECT insert_messages();

              DROP FUNCTION insert_messages();
            splitStatements: false
            endDelimiter: //
